{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonList.js","services/numbers.js","components/notification.js","components/error-notification.js","App.js","index.js"],"names":["Filter","props","className","placeholder","value","filteredName","onChange","handleFilter","PersonForm","onSubmit","handleSubmit","onReset","resetForm","newName","handleNameChange","newNumber","handleNumberChange","id","type","PersonList","filter","persons","a","length","name","toLowerCase","startsWith","map","person","key","number","onClick","deleteContact","baseUrl","axios","get","then","response","data","nameObj","post","delete","newObj","put","Notification","message","ErrorNotification","errorMessage","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setErrorMessage","useEffect","numberService","initialNumbers","event","target","preventDefault","doesContactExist","alert","find","n","window","confirm","contact","setTimeout","catch","error","returnedName","concat","deleted","contactToRemove","ReactDOM","render","document","getElementById"],"mappings":"2TAWeA,G,MARA,SAAAC,GACb,OACE,yBAAKC,UAAU,gBACb,2BAAOC,YAAa,oBAAoBC,MAAOH,EAAMI,aAAcC,SAAUL,EAAMM,kBCiC1EC,G,MApCI,SAAAP,GACjB,OACE,6BACE,0BAAMC,UAAU,OAAOO,SAAUR,EAAMS,aAAcC,QAASV,EAAMW,WAClE,6BACE,6BACE,2BACEV,UAAU,aACVC,YAAc,OACdC,MAAOH,EAAMY,QACbP,SAAUL,EAAMa,oBAGpB,6BACE,2BACEZ,UAAU,aACVE,MAAOH,EAAMc,UACbZ,YAAc,SACdG,SAAUL,EAAMe,uBAKtB,yBAAKd,UAAY,iBACf,4BAAQe,GAAG,MAAMC,KAAK,UAAtB,OAGA,4BAAQD,GAAG,QAAQC,KAAK,SAAxB,cCHKC,G,MAxBI,SAAAlB,GACjB,IAAMmB,EAASnB,EAAMoB,QAClBD,OAAO,SAAAE,GACN,OAAkC,IAA9BrB,EAAMI,aAAakB,QAGhBD,EAAEE,KAAKC,cAAcC,WAAWzB,EAAMI,aAAaoB,iBAE3DE,IAAI,SAAAC,GAAM,OACT,yBAAKC,IAAKD,EAAOX,GAAIf,UAAU,WAC7B,8BACG0B,EAAOJ,KADV,IACiBI,EAAOE,OACtB,4BACE5B,UAAU,gBACVE,MAAOwB,EAAOJ,KACdO,QAAS,kBAAM9B,EAAM+B,cAAcJ,EAAOX,GAAIW,EAAOJ,QACrD,8CAKV,OAAO,6BAAMJ,K,gBCvBTa,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB5B,EAfA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5B,EALA,SAACrB,GAEd,OADgBiB,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BhB,IAC5BmB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAG5B,EAVA,SAACrB,EAAGyB,GAEjB,OADgBR,IAAMS,IAAN,UAAaV,EAAb,YAAwBhB,GAAMyB,GAC/BN,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCF5BM,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAGP,yBAAK3C,UAAU,gBACb,2BAAI2C,KCKKC,EAXW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAC1B,OAAqB,OAAjBA,EACK,KAGP,yBAAK7C,UAAU,SACb,2BAAI6C,K,kOCCV,IAyJeC,EAzJH,WAAO,IAAD,EACcC,mBAAU,IADxB,mBACT5B,EADS,KACA6B,EADA,OAEcD,mBAAU,IAFxB,mBAETpC,EAFS,KAEAsC,EAFA,OAGkBF,mBAAU,IAH5B,mBAGTlC,EAHS,KAGEqC,EAHF,OAIkBH,mBAAU,IAJ5B,mBAIT5C,EAJS,KAIKgD,EAJL,OAKcJ,mBAAU,MALxB,mBAKTJ,EALS,KAKAS,EALA,OAMwBL,mBAAU,MANlC,mBAMTF,EANS,KAMKQ,EANL,KAQhBC,oBAAW,WACTC,IAAwBrB,KAAM,SAAAsB,GAC5BR,EAAYQ,MAEb,IAoGH,OACE,6BACE,yBAAKxD,UAAU,WACb,0CAGF,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAc2C,QAASA,IACvB,kBAAC,EAAD,CAAmBE,aAAcA,KAEnC,yBAAK7C,UAAU,aACX,kBAAC,EAAD,CAAQK,aAfK,SAAAoD,GACnBN,EAAWM,EAAMC,OAAOxD,UAepB,yBAAKF,UAAU,SACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,SAAd,aACA,kBAAC,EAAD,CACEU,UAhCM,WAChB,OAAOuC,EAAY,KAgCTrC,iBA5Ba,SAAA6C,GACvBR,EAAYQ,EAAMC,OAAOxD,QA4BfY,mBA1Be,SAAA2C,GACzBP,EAAcO,EAAMC,OAAOxD,QA0BjBM,aArHS,SAAAiD,GACnBA,EAAME,iBACN,IAAMtB,EAAU,CACdf,KAAMX,EACNiB,OAAQf,GAIJ+C,EAAmBzC,EAAQD,OAC/B,SAAAQ,GAAM,OAAIA,EAAOJ,OAASe,EAAQf,OAIpC,GAAuB,IAAnBX,EAAQU,QAAqC,IAArBR,EAAUQ,OACpCwC,MAAO,mCACF,GAAgC,IAA5BD,EAAiBvC,OAAc,CACxC,IACMmB,E,qVAAM,IADYrB,EAAQ2C,KAAM,SAAAC,GAAC,OAAIA,EAAEzC,OAASe,EAAQf,OAClD,CAAwBM,OAAQf,IAG1CmD,OAAOC,QAAP,WACMzB,EAAOlB,KADb,4EAIAiC,EACWf,EAAOzB,GAAIyB,GACnBN,KAAM,SAAAC,GACLa,EACE7B,EAAQM,IACN,SAAAyC,GAAO,OAAKA,EAAQnD,KAAOyB,EAAOzB,GAAKmD,EAAU/B,KAGrDiB,EAAU,UAAKZ,EAAOlB,KAAZ,sBACV6C,WAAY,WACVf,EAAY,OACX,OAEJgB,MAAO,SAAAC,GACNhB,EAAiBgB,EAAMlC,SAASC,KAAKiC,OACrCF,WAAY,WACVd,EAAiB,OAChB,YAGTE,EACWlB,GACRH,KAAM,SAAAoC,GACLtB,EAAY7B,EAAQoD,OAAQD,IAE5BlB,EAAU,UAAKf,EAAQf,KAAb,qCACV6C,WAAY,WACVf,EAAY,OACX,OAEJgB,MAAO,SAAAC,GACNhB,EAAiBgB,EAAMlC,SAASC,KAAKiC,OACrCF,WAAY,WACVd,EAAiB,OAChB,WA8DH,yBAAKrD,UAAU,QACb,wBAAIA,UAAU,SAAd,WACA,oDACA,kBAAC,EAAD,CACEmB,QAASA,EACThB,aAAcA,EACd2B,cAxDU,SAAAf,GACpB,IAAMyD,EAAUrD,EAAQD,OAAQ,SAAAgD,GAAO,OAAIA,EAAQnD,KAAOA,IACpD0D,EAAkBtD,EAAQ2C,KAAM,SAAAC,GAAC,OAAIA,EAAEhD,KAAOA,IAElDiD,OAAOC,QAAP,0CACqCQ,EAAgBnD,KADrD,QAIAiC,EAAsBxC,GAAImB,KAAMc,EAAYwB,OAkD5B,4BACVxE,UAAU,iBADA,eCjJtB0E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6a0db3c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Filter.css'\r\n\r\nconst Filter = props => {\r\n  return (\r\n    <div className=\"search-field\">\r\n      <input placeholder= \"Search Contact...\" value={props.filteredName} onChange={props.handleFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport './PersonForm.css'\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={props.handleSubmit} onReset={props.resetForm}>\r\n        <div>\r\n          <div>\r\n            <input\r\n              className=\"inputField\"\r\n              placeholder = \"Name\"\r\n              value={props.newName}\r\n              onChange={props.handleNameChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              className=\"inputField\"\r\n              value={props.newNumber}\r\n              placeholder = \"Number\"\r\n              onChange={props.handleNumberChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className = \"submit-button\">\r\n          <button id=\"add\" type=\"submit\">\r\n            add\r\n          </button>\r\n          <button id=\"clear\" type=\"reset\">\r\n            clear\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\nimport './PersonList.css'\r\n\r\nconst PersonList = props => {\r\n  const filter = props.persons\r\n    .filter(a => {\r\n      if (props.filteredName.length === 0) {\r\n        return true;\r\n      }\r\n      return a.name.toLowerCase().startsWith(props.filteredName.toLowerCase());\r\n    })\r\n    .map(person => (\r\n      <div key={person.id} className=\"contact\">\r\n        <span>\r\n          {person.name} {person.number}\r\n          <button\r\n            className=\"delete-button\"\r\n            value={person.name}\r\n            onClick={() => props.deleteContact(person.id, person.name)}>\r\n            <label>delete</label>\r\n          </button>\r\n        </span>\r\n      </div>\r\n    ));\r\n  return <div>{filter}</div>;\r\n};\r\n\r\nexport default PersonList;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (nameObj) => {\r\n  const request = axios.post(baseUrl, nameObj)\r\n  return request.then(response => response.data)\r\n};\r\n\r\nconst update = (id,newObj) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObj)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update\r\n};\r\n","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"notification\">\r\n      <b>{message}</b>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst ErrorNotification = ({errorMessage}) => {\r\n  if (errorMessage === null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      <b>{errorMessage}</b>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorNotification;\r\n","import React, {useState, useEffect} from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport PersonList from './components/PersonList';\nimport numberService from './services/numbers';\nimport Notification from './components/notification';\nimport ErrorNotification from './components/error-notification';\nimport './App.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState ([]);\n  const [newName, setNewName] = useState ('');\n  const [newNumber, setNewNumber] = useState ('');\n  const [filteredName, setFilter] = useState ('');\n  const [message, setMessage] = useState (null);\n  const [errorMessage, setErrorMessage] = useState (null);\n\n  useEffect (() => {\n    numberService.getAll ().then (initialNumbers => {\n      setPersons (initialNumbers);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault ();\n    const nameObj = {\n      name: newName,\n      number: newNumber,\n    };\n\n    //checks and filters if the name already exists in the persons array\n    const doesContactExist = persons.filter (\n      person => person.name === nameObj.name\n    );\n\n    // if the returned array is not empty concatanates the name to the persons array\n    if (newName.length === 0 || newNumber.length === 0) {\n      alert ('Please complete the fields');\n    } else if (doesContactExist.length !== 0) {\n      const contactToUpdate = persons.find (n => n.name === nameObj.name);\n      const newObj = {...contactToUpdate, number: newNumber};\n\n      if (\n        window.confirm (\n          ` ${newObj.name} is already in the phonebook, replace the old number with the new one?`\n        )\n      )\n        numberService\n          .update (newObj.id, newObj)\n          .then (response => {\n            setPersons (\n              persons.map (\n                contact => (contact.id !== newObj.id ? contact : response)\n              )\n            );\n            setMessage (`${newObj.name} has been updated`);\n            setTimeout (() => {\n              setMessage (null);\n            }, 5000);\n          })\n          .catch (error => {\n            setErrorMessage (error.response.data.error);\n            setTimeout (() => {\n              setErrorMessage (null);\n            }, 5000);\n          });\n    } else {\n      numberService\n        .create (nameObj)\n        .then (returnedName => {\n          setPersons (persons.concat (returnedName));\n\n          setMessage (`${nameObj.name} has been added to the phonebook`);\n          setTimeout (() => {\n            setMessage (null);\n          }, 5000);\n        })\n        .catch (error => {\n          setErrorMessage (error.response.data.error);\n          setTimeout (() => {\n            setErrorMessage (null);\n          }, 5000);\n        });\n\n      // .catch(error =>{\n      //   // console.log('the error is as :',error.response.data.error)\n      //   setErrorMessage(error.response.data.error)\n      //   setTimeout(() => {\n      //   setMessage(null);\n      //   }, 5000)})\n    }\n  };\n\n  const deleteContact = id => {\n    const deleted = persons.filter (contact => contact.id !== id);\n    const contactToRemove = persons.find (n => n.id === id);\n    if (\n      window.confirm (\n        `Are you sure you want to delete ${contactToRemove.name} ?`\n      )\n    ) {\n      numberService.remove (id).then (setPersons (deleted));\n    }\n  };\n\n  const resetForm = () => {\n    return setNewName ('');\n  };\n\n  //function to handle the onchange value of input name\n  const handleNameChange = event => {\n    setNewName (event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNewNumber (event.target.value);\n  };\n\n  const handleFilter = event => {\n    setFilter (event.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"nav-bar\">\n        <h1>Phonebook</h1>\n      </div>\n\n      <div className=\"pop-up\">\n        <Notification message={message} />\n        <ErrorNotification errorMessage={errorMessage} />\n      </div>\n      <div className=\"container\">\n          <Filter handleFilter={handleFilter} />\n        <div className=\"cards\">\n          <div className=\"card\">\n            <h2 className=\"title\">Add a new</h2>\n            <PersonForm\n              resetForm={resetForm}\n              handleNameChange={handleNameChange}\n              handleNumberChange={handleNumberChange}\n              handleSubmit={handleSubmit}\n            />\n          </div>\n          <div className=\"card\">\n            <h2 className=\"title\">Numbers</h2>\n            <p>Name: gaurab abcddkjd</p>\n            <PersonList\n              persons={persons}\n              filteredName={filteredName}\n              deleteContact={deleteContact}\n            />\n                      <button\n            className=\"delete-button\">\n              delete\n          </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}